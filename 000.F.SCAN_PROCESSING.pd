#N canvas 88 25 1115 918 10;
#X text 557 13 This patch aims to emulate the famous Rutt-Etra scan
processor by plotting digital video or images into audio signals sent
to an X/Y analog monitor with brightness control \, and draws inspiration
from a similar MaxMSP patch by Ivan Marusic Klif.;
#X obj 28 19 vs-gemhead-master;
#X text 555 92 Results are very dependent on your sampling rate. Optimum
samping rate is 192K.;
#N canvas 0 22 560 391 SOFTWARE 0;
#X text 23 15 Requirements:;
#X text 62 168 with Horizontal \, Vertical and Brightness inputs;
#X text 35 149 * Oscilloscope \, vector monitor \, or Vectrex;
#X text 35 96 * Gem (Help->Find externals "Gem");
#X text 36 49 * Pd 0.45 or newer \, 32 bit version only;
#X text 57 69 (Pd Extended and 64 bit won't work!);
#X text 34 193 * Or use Hansi Raber's "Oscilloscope!" app + SoundFlower
(MacOS);
#X text 49 231 https://github.com/kritzikratzi/Oscilloscope/releases/tag/1.0.9
;
#X text 36 119 * DC coupled soundcard @ 192K sampling rate for best
results;
#X restore 558 275 pd SOFTWARE HARDWARE REQUIREMENTS README;
#N canvas 689 576 600 413 INPUTS 0;
#X text 289 227 Derek Holzer;
#X text 290 283 macumbista@gmail.com;
#X text 288 255 September 2018 Helsinki;
#X text 62 38 INPUTS;
#X text 88 65 1) Gemlist;
#X text 88 81 2) Vertical Frequency;
#X text 88 95 3) Horizontal Lines;
#X text 88 126 5) Vertical Size;
#X text 88 142 6) Zoom (summed w/ Hsize \, Vsize);
#X text 88 156 7) Horizontal Position;
#X text 88 172 8) Vertical Position;
#X text 288 65 9) Z Axis Deflection;
#X text 288 81 10) Horizontal Blanking;
#X text 288 95 11) Vertical Blanking;
#X text 288 111 12) Brightness;
#X text 288 126 13) External Vertical Signal;
#X text 288 142 14) External Horizontal Signal;
#X text 288 172 16) Internal/External Source (int: 0 \, 1);
#X text 288 156 15) Raster Mode (int: 0 \, 1 \, 2);
#X text 62 210 OUTPUTS;
#X text 88 237 1) X signal;
#X text 88 253 2) Y signal;
#X text 88 267 3) Z signal;
#X text 88 283 4) Brightness signal;
#X text 88 111 4) Horizontal Size;
#X restore 814 275 pd INPUTS OUTPUTS HELP;
#X obj 402 306 vs-operator-gui \$0 \$0-op-X;
#A saved 25 0 1 3 0 0 0 1 1 0 0;
#X obj 402 441 vs-operator-gui \$0 \$0-op-Y;
#A saved 25 0 1 3 0 0 0 1 1 0 0;
#X obj 403 577 vs-operator-gui \$0 \$0-op-Z;
#A saved 25 0 0 3 0 0 0 1 1 0 0;
#X obj 28 695 vs-audiodac-gui \$0 \$0-dac-one;
#A saved 75 1 5 6 1 1 100 0 0 0 1 2 100;
#X obj 28 851 switch~;
#X obj 28 621 vs-projector-gui \$0 \$0-proj;
#A saved 80 0 0 80;
#X obj 28 403 vs-rotate-gui \$0 \$0-rot-one, f 28;
#A saved 0 0 0 0 0 0 1 0 0 0;
#X text 876 744 Derek Holzer;
#X text 876 793 macumbista@gmail.com;
#X obj 28 185 vs-scanprocessor-gui;
#A saved 25 120 1 4 100 50 -50 3 5 10 300 0 0;
#X text 555 194 Hsize \, Vsize \, and Zoom can all be used to zoom
into an image \, even down to single pixels. Hpos and Vpos can be used
to scroll around inside a zoomed image. Zdeflect adds the brightness
signal to the Z axis for the classic "Vasulka effect" when projected
in 3D space with [vs-projector-gui].;
#X text 555 137 Use the internal raster for horizonal \, vertical \,
or grid lines. Other shapes can be used to drive the [scanprocessor]
abstraction.;
#X text 876 768 Stockholm APR 2022;
#X obj 28 541 vs-scale-gui \$0 \$0-scale;
#A saved 50 50 50;
#X obj 731 309 vs-phasor-gui \$0 \$0-mod-1;
#A saved 0 9 0 0;
#X obj 734 441 vs-phasor-gui \$0 \$0-mod-2;
#A saved 0 7 0 0;
#X obj 732 576 vs-phasor-gui \$0 \$0-mod-3;
#A saved 0 5 0 0;
#X text 393 719 These operators warp the 3D image in the X \, Y \,
and Z dimensions. The number of harmonics determine the number of "ripples"
\, the scale determines the dpeth of the ripples \, phase changes the
location of the ripples \, and the wave shape determines the shape
of the ripples. TURN UP SCALE TO SEE THEM AT WORK.;
#X text 730 649 These phasors modulate the phase of the operators \,
creating a slow moving \, animated rippling effect.;
#X connect 1 0 14 0;
#X connect 5 0 11 0;
#X connect 6 0 11 1;
#X connect 7 0 11 2;
#X connect 8 0 9 0;
#X connect 10 0 8 0;
#X connect 10 1 8 1;
#X connect 10 2 8 2;
#X connect 11 0 18 0;
#X connect 11 1 18 1;
#X connect 11 2 18 2;
#X connect 11 3 18 3;
#X connect 14 0 11 0;
#X connect 14 0 6 0;
#X connect 14 0 7 0;
#X connect 14 1 11 1;
#X connect 14 1 5 0;
#X connect 14 2 11 2;
#X connect 14 3 11 3;
#X connect 18 0 10 0;
#X connect 18 1 10 1;
#X connect 18 2 10 2;
#X connect 18 3 10 3;
#X connect 19 0 5 1;
#X connect 20 0 6 1;
#X connect 21 0 7 1;
