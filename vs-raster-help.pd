#N canvas 154 23 1057 707 10;
#X text 870 372 Derek Holzer;
#X text 870 421 macumbista@gmail.com;
#X obj 653 387 tgl 15 1 empty empty ON_OFF 17 7 0 10 -258113 -1 -1
0 1;
#X obj 653 415 switch~;
#X obj 450 33 cnv 15 190 400 empty empty BRIGHTNESS_MODULATION 10 12
0 14 -233017 -66577 0;
#X obj 27 33 cnv 15 190 400 empty empty RASTER 10 12 0 14 -233017 -66577
0;
#X obj 236 32 cnv 15 190 400 empty empty SIZE_+_POSITION_CONTROL 5
12 0 14 -233017 -66577 0;
#X text 664 171 Interesting effects can be achieved by directly modulating
the brightness of the raster \, as seen in this patch. Experiment with
different modulation frequencies \, phase degree \, waveshapes \, and
scaling factors sent to the [VS-operator] abstraction. The [VS-operator]
can also be replaced by an external signal from the soundcard via [adc~]
\, for example.;
#X text 663 30 [VS-raster] is designed to produce a rectangular raster
field for the [VS-scanprocessor] patch \, or for direct brightness
modulation video synthesis. It takes a vertical scan ramp from [phasor~]
\, a number of lines \, and a brightness factor. It outputs the vertical
ramp and a number of horizontal ramps phase locked to the vertical
ramp \, as well as a blanked brightness to eliminate the "flyback"
lines. The line number is multiplied by the vertical frequency \, so
you will reach the Nyquist aliasing frequenecy of a 44.1K sampling
rate very quickly!;
#X obj 111 159 vradio 15 1 1 3 empty empty empty 0 -8 0 10 -4034 -1
-1 2;
#X text 141 176 VERT;
#X text 140 161 HORZ;
#X text 140 192 GRID;
#X obj 510 238 hsl 128 15 -1 1 0 0 empty empty empty 135 8 0 10 -4034
-1 -1 8255 1;
#X obj 507 187 hradio 15 1 1 4 empty empty saw.sin.tri.sqr -13 -10
0 10 -4034 -1 -1 2;
#X obj 507 257 sig~;
#X obj 523 288 nbx 5 14 -1e+37 1e+37 0 1 empty empty scale 60 8 0 10
-4034 -1 -1 100 256;
#X obj 523 340 sig~;
#X obj 523 316 / 100;
#X text 533 367 Unipolar output;
#X floatatom 546 258 5 0 0 0 - - -, f 5;
#X obj 460 366 VS-operator;
#X obj 507 212 VS-waveselect;
#X obj 511 74 nbx 5 14 -1e+37 1e+37 0 1 empty empty harmonic_% 60 8
0 10 -4034 -1 -1 100 256;
#X obj 511 126 sig~;
#X obj 511 102 / 100;
#X obj 551 103 nbx 5 14 -1e+37 1e+37 0 1 empty empty phase 60 8 0 10
-4034 -1 -1 0 256;
#X obj 551 155 sig~;
#X obj 551 131 / 360;
#X obj 42 383 dac~ 1 2 3;
#X obj 42 70 nbx 5 14 -1e+37 1e+37 0 1 empty empty Vertical_frequency
0 -8 0 10 -4034 -1 -1 25 256;
#X obj 54 110 nbx 5 14 -1e+37 1e+37 0 1 empty empty Horizontal_lines
0 -8 0 10 -4034 -1 -1 20 256;
#X obj 523 391 s~ \$0-brightmod;
#X obj 76 270 r~ \$0-brightmod;
#X obj 460 73 phasor~;
#X obj 460 51 nbx 5 14 -1e+37 1e+37 0 1 empty empty frequency 60 8
0 10 -4034 -1 -1 486 256;
#X obj 258 109 sig~;
#X obj 258 86 / 100;
#X obj 258 67 nbx 5 14 -1e+37 1e+37 0 1 empty empty Hblanking 60 8
0 10 -4034 -1 -1 20 256;
#X obj 311 131 sig~;
#X obj 311 108 / 100;
#X obj 311 89 nbx 5 14 -1e+37 1e+37 0 1 empty empty Vblanking 60 8
0 10 -4034 -1 -1 20 256;
#X obj 66 176 sig~;
#X obj 66 153 / 100;
#X obj 66 134 nbx 5 14 -1e+37 1e+37 0 1 empty empty Brightness 60 8
0 10 -4034 -1 -1 0 256;
#X text 24 448 INLETS;
#X text 45 512 3 Brightness;
#X text 45 532 4 HORZ blanking;
#X text 45 552 5 VERT blanking;
#X text 367 448 OUTLETS;
#X text 388 532 4 Y (unipolar \, for scan processing inputs);
#X text 388 512 3 X (unipolar \, for scan processing inputs);
#X text 388 492 2 Y (bipolar \, for centered vector output);
#X text 388 472 1 X (bipolar \, for centered vector output);
#X text 388 552 5 Brightness;
#X obj 42 318 VS-raster, f 15;
#X obj 42 349 VS-scale, f 26;
#X obj 257 179 nbx 5 14 -1e+37 1e+37 0 1 empty empty Vert_off 0 -8
0 10 -4034 -1 -1 0 256;
#X obj 317 179 nbx 5 14 -1e+37 1e+37 0 1 empty empty Horz_off 0 -8
0 10 -4034 -1 -1 0 256;
#X obj 258 201 / 100;
#X obj 258 223 sig~;
#X obj 318 199 / 100;
#X obj 318 221 sig~;
#X obj 257 299 sig~;
#X obj 257 276 / 100;
#X obj 257 257 nbx 5 14 -1e+37 1e+37 0 1 empty empty Scale 60 8 0 10
-4034 -1 -1 30 256;
#X text 45 572 6 HORZ offset (optional);
#X text 45 592 7 VERT offset (optional);
#X obj 42 200 sig~;
#X obj 52 230 sig~;
#X text 665 279 This method of making rasters is a bit computationally
"expensive" \, however it is sample precise.;
#X text 870 396 Helsinki September 2018;
#X text 46 472 1 Vertical frequency/framerate;
#X text 45 492 2 Number of horizontal lines per frame;
#X text 45 613 8 Orientation (int: 0 = HORZ \, 1 = VERT \, 2 = GRID)
;
#X connect 2 0 3 0;
#X connect 9 0 55 7;
#X connect 13 0 15 0;
#X connect 13 0 20 0;
#X connect 14 0 22 0;
#X connect 15 0 21 3;
#X connect 16 0 18 0;
#X connect 17 0 21 4;
#X connect 18 0 17 0;
#X connect 21 1 32 0;
#X connect 22 0 13 0;
#X connect 23 0 25 0;
#X connect 24 0 21 1;
#X connect 25 0 24 0;
#X connect 26 0 28 0;
#X connect 27 0 21 2;
#X connect 28 0 27 0;
#X connect 30 0 68 0;
#X connect 31 0 69 0;
#X connect 33 0 55 2;
#X connect 34 0 21 0;
#X connect 35 0 34 0;
#X connect 36 0 55 3;
#X connect 37 0 36 0;
#X connect 38 0 37 0;
#X connect 39 0 55 4;
#X connect 40 0 39 0;
#X connect 41 0 40 0;
#X connect 42 0 55 2;
#X connect 43 0 42 0;
#X connect 44 0 43 0;
#X connect 55 0 56 0;
#X connect 55 1 56 1;
#X connect 55 4 56 3;
#X connect 56 0 29 0;
#X connect 56 1 29 1;
#X connect 56 3 29 2;
#X connect 57 0 59 0;
#X connect 58 0 61 0;
#X connect 59 0 60 0;
#X connect 60 0 55 5;
#X connect 61 0 62 0;
#X connect 62 0 55 6;
#X connect 63 0 56 4;
#X connect 63 0 56 5;
#X connect 64 0 63 0;
#X connect 65 0 64 0;
#X connect 68 0 55 0;
#X connect 69 0 55 1;
